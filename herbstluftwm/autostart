#!/bin/bash

hc() {
	herbstclient "$@"
}

hc emit_hook reload

xsetroot -solid '#5A8E3A'

setxkbmap de

xbindkeys &

xrandr --output DP-0 --primary --mode 2560x1440 --output HDMI-0 --mode 3440x1440 --left-of DP-0


hc keyunbind --all

# use windows key
Mod=Mod4 

hc keybind $Mod-Tab use-previous
hc keybind $Mod-Shift-q quit
hc keybind $Mod-Shift-r reload
hc keybind $Mod-Shift-c close
hc keybind $Mod-Shift-space spawn dmenu_run
hc keybind $Mod-Shift-t spawn kitty
# TODO keybind for screenshot

# basic movement in tiling and floating mode focusing clients
hc keybind $Mod-Left focus left
hc keybind $Mod-Down focus down
hc keybind $Mod-Up focus up
hc keybind $Mod-Right focus right
hc keybind $Mod-h focus left
hc keybind $Mod-j focus down
hc keybind $Mod-k focus up
hc keybind $Mod-l focus right

# moving clients in tiling and floating mode
hc keybind $Mod-Shift-Left shift left
hc keybind $Mod-Shift-Down shift down
hc keybind $Mod-Shift-Up shift up
hc keybind $Mod-Shift-Right shift right
hc keybind $Mod-Shift-h shift left
hc keybind $Mod-Shift-j shift down
hc keybind $Mod-Shift-k shift up
hc keybind $Mod-Shift-l shift right

# splitting frames creates an empty frame at the specified direction
hc keybind $Mod-u split bottom 0.5
hc keybind $Mod-o split right 0.5

# let the current frame explode into subframes
hc keybind $Mod-Control-space split explode

# resizing frames and floating clients
resizestep=0.02
hc keybind $Mod-Control-h resize left +$resizestep
hc keybind $Mod-Control-j resize down +$resizestep
hc keybind $Mod-Control-k resize up +$resizestep
hc keybind $Mod-Control-l resize right +$resizestep
hc keybind $Mod-Control-Left resize left +$resizestep
hc keybind $Mod-Control-Down resize down +$resizestep
hc keybind $Mod-Control-Up resize up +$resizestep
hc keybind $Mod-Control-Right resize right +$resizestep






# Mute/Unmute volume with Fn + Print Screen
hc keybind Print spawn pactl set-sink-mute @DEFAULT_SINK@ toggle

# Decrease volume with Fn + Scroll Lock
hc keybind Scroll_Lock spawn pactl set-sink-volume @DEFAULT_SINK@ -5%

# Increase volume with Fn + Pause
hc keybind Pause spawn pactl set-sink-volume @DEFAULT_SINK@ +5%



# tags
hc rename default "1" || true
addtag()  {
	hc add $1
	if [ ! -z "$2" ]; then
		hc keybind "$Mod-$2" use $1
		hc keybind "$Mod-Shift-$2" move $1
	fi
}

addtag 1 ampersand
addtag 2 braceleft
addtag 3 bracketleft
addtag 4 parenleft
addtag 5 equal
addtag 6 plus
addtag 7 parenright
addtag 8 bracketright
addtag 9 braceright
addtag 0 exclam


hc keybind $Mod-period use_index +1 --skip-visible
hc keybind $Mod-comma  use_index -1 --skip-visible



hc keybind $Mod-r remove
hc keybind $Mod-s floating toggle
hc keybind $Mod-f fullscreen toggle
hc keybind $Mod-Shift-f set_attr clients.focus.floating toggle
hc keybind $Mod-Shift-m set_attr clients.focus.minimized true
hc keybind $Mod-Control-m jumpto last-minimized
hc keybind $Mod-p pseudotile toggle


hc set default_frame_layout max



hc keybind $Mod-space						\
	or , and . compare tags.focus.curframe_wcount = 2	\
		. cycle_layout +1				\
			vertical horizontal max vertical grid	\
		, cycle_layout +1





hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize




hc keybind Mod1-Tab         cycle_all +1
hc keybind Mod1-Shift-Tab   cycle_all -1

hc keybind $Mod-BackSpace   cycle_monitor
hc keybind $Mod-c cycle
hc keybind $Mod-i jumpto urgent



hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1
hc set frame_border_active_color '#222222cc'
hc set frame_border_normal_color '#ffffff'
hc set frame_bg_normal_color '#565656aa'
hc set frame_bg_active_color '#345F0Caa'
hc set frame_border_width 1
hc set always_show_frame on
hc set frame_bg_transparent on
hc set frame_transparent_width 5
hc set frame_gap 4

hc attr theme.title_height 0
#hc attr theme.title_font 'Dejavu Sans:pixelsize=12'  # example using Xft
hc attr theme.title_font '-*-fixed-medium-r-*-*-13-*-*-*-*-*-*-*'
hc attr theme.padding_top 2  # space below the title's baseline (i.e. text depth)
hc attr theme.active.color '#9AFAFF'
hc attr theme.title_color '#222222'
hc attr theme.normal.color '#ffffef'
hc attr theme.urgent.color '#7811A1dd'
hc attr theme.normal.title_color '#898989'
hc attr theme.inner_width 1
hc attr theme.inner_color black
hc attr theme.border_width 2
hc attr theme.floating.border_width 4
hc attr theme.floating.outer_width 1
hc attr theme.floating.outer_color black
hc attr theme.active.inner_color '#789161'
hc attr theme.urgent.inner_color '#9A65B0'
hc attr theme.normal.inner_color '#606060'
# copy inner color to outer_color
for state in active urgent normal ; do
	hc substitute C theme.${state}.inner_color \
		attr theme.${state}.outer_color C
done
hc attr theme.active.outer_width 1
hc attr theme.background_color '#141414'

hc set window_gap 0
hc set frame_padding 0
hc set smart_window_surroundings off
hc set smart_frame_surroundings on
hc set mouse_recenter_gap 0

hc set focus_follows_mouse 1
hc set raise_on_click false
hc set snap_gap 5




hc unrule -F
#hc rule class=XTerm tag=3 # move all xterms to tag 3
hc rule focus=on # normally focus new clients
hc rule floatplacement=smart
#hc rule focus=off # normally do not focus new clients
# give focus to most common terminals
#hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' floating=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off

hc set tree_style '╾│ ├└╼─┐'
hc detect_monitors

load_layout() {
	if [ -f "$2" ]; then
		hc load $1 "$(cat $2)"
	fi
}

load_layout 2 ~/herbst.ws.2
load_layout 3 ~/herbst.ws.3


hc unlock



# start polybar
polybar example &


# TODO set wallpaper, path to jpg file  
# feh --bg-scale /path &

